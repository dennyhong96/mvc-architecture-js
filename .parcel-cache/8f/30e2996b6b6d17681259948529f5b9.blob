"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _classPrivateFieldGet(receiver, privateMap) { var descriptor = privateMap.get(receiver); if (!descriptor) { throw new TypeError("attempted to get private field on non-instance"); } if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

var _parentElement = new WeakMap();

// This class not rendering anything
// used to get search input and handle search submit
class SearchView {
  constructor() {
    _parentElement.set(this, {
      writable: true,
      value: document.querySelector(".search")
    });
  }

  render() {} // Returns input value from search input field


  getQuery() {
    return _classPrivateFieldGet(this, _parentElement).querySelector(".search__field").value;
  } // Attaches search handler on form


  attachSearchHandler(handler) {
    _classPrivateFieldGet(this, _parentElement).addEventListener("submit", handler);
  }

  clearInput() {
    _classPrivateFieldGet(this, _parentElement).querySelector(".search__field").value = "";
  }

}

var _default = new SearchView();

exports.default = _default;